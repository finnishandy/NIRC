// Load the TCP Library
var net = require('net');
var dnode = require('dnode');

// Keep track of the chat clients
var clients = [];

var d = dnode();
d.on('remote', function (irc) {

// Start a TCP Server
    net.createServer(function (socket) {

        // Identify this client
        socket.name = socket.remoteAddress + ":" + socket.remotePort

        // Put this new client in the list
        clients.push(socket);

        // Send a nice welcome message and announce
        socket.write("Welcome " + socket.name + "\n");
        broadcast(socket.name + " joined the chat\n", socket);

        // Handle incoming messages from clients.
        socket.on('data', function (data) {
            console.log("data method: " + JSON.stringify(data));
            irc.transform('beep', function (s) {
                console.log('beep => ' + s);
                d.end();
            });
            if (data.toString().indexOf("USER") > -1) { socket.write("PING :2eea0548\n"); }
            if (data.toString().indexOf("PONG") > -1) {
                socket.write("MODE woo +i\n");
            }
            if (data.toString().indexOf("JOIN") > -1) {
                socket.write("MODE #nsb\n");
                socket.write("MODE #nsb +nt\n");
                socket.write("PRIVMSG #nsb Hello?\n");
            }
            broadcast(socket.name + "> " + data, socket);
        });

        // Remove the client from the list when it leaves
        socket.on('end', function () {
            clients.splice(clients.indexOf(socket), 1);
            broadcast(socket.name + " left the chat.\n");
        });

        // Send a message to all clients
        function broadcast(message, sender) {
            clients.forEach(function (client) {
                // Don't want to send it to sender
                if (client === sender) return;
                client.write(message);
            });
            // Log it to the server output too
            process.stdout.write(message)
        }

    }).listen(6665)
    // Put a friendly message on the terminal of the server.
    console.log("Chat server running at port 5000\n");
});

var c = net.connect(6004);
c.pipe(d).pipe(c);